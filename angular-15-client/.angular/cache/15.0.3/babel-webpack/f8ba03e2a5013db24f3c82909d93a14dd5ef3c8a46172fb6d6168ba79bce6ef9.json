{"ast":null,"code":"import _asyncToGenerator from \"F:/DDesktop/MEAN_BC/mean-stack-authentication-authorization-master/angular-15-client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport Web3 from 'web3';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/user.service\";\nimport * as i2 from \"@angular/forms\";\n// deteethproviderfix dont care how do it  \nexport class BoardUserComponent {\n  constructor(userService) {\n    this.userService = userService;\n    this.depositForm = {\n      ethValue: null\n    };\n    const alchemy_url = \"https://eth-sepolia.g.alchemy.com/v2/YGNAUM7D8wTvwFUIV8iyRv0i8N6BTT86\";\n    this.web3 = new Web3(alchemy_url);\n  }\n  ngOnInit() {\n    this.userService.getUserBoard().subscribe({\n      next: data => {\n        this.content = data;\n      },\n      error: err => {\n        if (err.error) {\n          try {\n            const res = JSON.parse(err.error);\n            this.content = res.message;\n          } catch {\n            this.content = `Error with status: ${err.status} - ${err.statusText}`;\n          }\n        } else {\n          this.content = `Error with status: ${err.status}`;\n        }\n      }\n    });\n  }\n  onSubmit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      console.log(_this.depositForm);\n      console.log(Web3.version);\n      const contractAddress = \"0x52E963CBddCA90626efa7535c33d8219230d5D39\";\n      const abiContract = [{\n        \"inputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n      }, {\n        \"inputs\": [],\n        \"name\": \"balance\",\n        \"outputs\": [{\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      }, {\n        \"inputs\": [],\n        \"name\": \"balanceRecieved\",\n        \"outputs\": [{\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      }, {\n        \"inputs\": [],\n        \"name\": \"deposit\",\n        \"outputs\": [],\n        \"stateMutability\": \"payable\",\n        \"type\": \"function\"\n      }, {\n        \"inputs\": [],\n        \"name\": \"getContractBalance\",\n        \"outputs\": [{\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      }, {\n        \"inputs\": [],\n        \"name\": \"receiver\",\n        \"outputs\": [{\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      }, {\n        \"inputs\": [],\n        \"name\": \"transactionValue\",\n        \"outputs\": [{\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      }, {\n        \"inputs\": [],\n        \"name\": \"withdrawAllToOwner\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      }, {\n        \"inputs\": [{\n          \"internalType\": \"uint256\",\n          \"name\": \"_transactionValue\",\n          \"type\": \"uint256\"\n        }, {\n          \"internalType\": \"address\",\n          \"name\": \"_other\",\n          \"type\": \"address\"\n        }],\n        \"name\": \"withdrawToOther\",\n        \"outputs\": [],\n        \"stateMutability\": \"payable\",\n        \"type\": \"function\"\n      }, {\n        \"inputs\": [{\n          \"internalType\": \"uint256\",\n          \"name\": \"_transactionValue\",\n          \"type\": \"uint256\"\n        }],\n        \"name\": \"withdrawToOwner\",\n        \"outputs\": [],\n        \"stateMutability\": \"payable\",\n        \"type\": \"function\"\n      }, {\n        \"stateMutability\": \"payable\",\n        \"type\": \"receive\"\n      }];\n      let contractInst = new _this.web3.eth.Contract(abiContract, contractAddress);\n      let contractBalance = contractInst.methods.getContractBalance().call().then(res => console.log(res));\n      let accounts = yield _this.web3.eth.getAccounts();\n      console.log(accounts);\n      // let balance = await this.web3.eth.getBalance(accounts[0]);\n      //console.log(this.web3.utils.fromWei(await balance, \"ether\"));\n      //const transaction006=this.web3.utils.toWei(\"0.1\",\"ether\");\n      //let txResult=await contractInst.methods.deposit().send({from: accounts[0],value:transaction006});\n      /*let txResult2=await contractInst.methods.\r\n      withdrawToOther(transaction006, \"0xe1e481Ba1AD79E5d644440847eeabb139eA3Bf06\").\r\n      send({from: accounts[0]});\r\n      */\n      //console.log(txResult2);\n    })();\n  }\n}\n\nBoardUserComponent.ɵfac = function BoardUserComponent_Factory(t) {\n  return new (t || BoardUserComponent)(i0.ɵɵdirectiveInject(i1.UserService));\n};\nBoardUserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BoardUserComponent,\n  selectors: [[\"app-board-user\"]],\n  decls: 9,\n  vars: 1,\n  consts: [[1, \"container\"], [1, \"jumbotron\"], [\"name\", \"depositForm\", 1, \"form-group\", 3, \"ngSubmit\"], [\"f\", \"ngForm\"], [\"for\", \"ethValue\"], [\"type\", \"number\", \"name\", \"ethValue\", 1, \"ethValue\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\", \"btn-block\"]],\n  template: function BoardUserComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"header\", 1)(2, \"form\", 2, 3);\n      i0.ɵɵlistener(\"ngSubmit\", function BoardUserComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"label\", 4);\n      i0.ɵɵtext(5, \"Value:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function BoardUserComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.depositForm.ethValue = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"button\", 6);\n      i0.ɵɵtext(8, \"Deposit here\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.depositForm.ethValue);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Web3","BoardUserComponent","constructor","userService","ethValue","alchemy_url","web3","ngOnInit","getUserBoard","subscribe","next","data","content","error","err","res","JSON","parse","message","status","statusText","onSubmit","console","log","depositForm","version","contractAddress","abiContract","contractInst","eth","Contract","contractBalance","methods","getContractBalance","call","then","accounts","getAccounts","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["F:\\DDesktop\\MEAN_BC\\mean-stack-authentication-authorization-master\\angular-15-client\\src\\app\\board-user\\board-user.component.ts","F:\\DDesktop\\MEAN_BC\\mean-stack-authentication-authorization-master\\angular-15-client\\src\\app\\board-user\\board-user.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../_services/user.service';\n\nimport Web3 from 'web3';\nimport { AbiItem } from 'web3-utils'\n\n// deteethproviderfix dont care how do it  \n@Component({\n  selector: 'app-board-user',\n  templateUrl: './board-user.component.html',\n  styleUrls: ['./board-user.component.css']\n})\nexport class BoardUserComponent implements OnInit {\n  content?: string;\n  depositForm: any = {\n    ethValue: null,\n  };\n  private web3: Web3;\n\n  constructor(private userService: UserService,\n  ) { \n    const alchemy_url = \"https://eth-sepolia.g.alchemy.com/v2/YGNAUM7D8wTvwFUIV8iyRv0i8N6BTT86\"\n    this.web3 = new Web3(alchemy_url);\n\n  }\n\n  ngOnInit(): void {\n    this.userService.getUserBoard().subscribe({\n      next: data => {\n        this.content = data;\n      },\n      error: err => {\n        if (err.error) {\n          try {\n            const res = JSON.parse(err.error);\n            this.content = res.message;\n          } catch {\n            this.content = `Error with status: ${err.status} - ${err.statusText}`;\n          }\n        } else {\n          this.content = `Error with status: ${err.status}`;\n        }\n      }\n    });\n  }\n  \n  async onSubmit(): Promise<void> {\n    \n\n    console.log(this.depositForm);\n    console.log(Web3.version);\n    const contractAddress=\"0x52E963CBddCA90626efa7535c33d8219230d5D39\";\n    const abiContract=[\n      {\n        \"inputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n      },\n      {\n        \"inputs\": [],\n        \"name\": \"balance\",\n        \"outputs\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"inputs\": [],\n        \"name\": \"balanceRecieved\",\n        \"outputs\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"inputs\": [],\n        \"name\": \"deposit\",\n        \"outputs\": [],\n        \"stateMutability\": \"payable\",\n        \"type\": \"function\"\n      },\n      {\n        \"inputs\": [],\n        \"name\": \"getContractBalance\",\n        \"outputs\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"inputs\": [],\n        \"name\": \"receiver\",\n        \"outputs\": [\n          {\n            \"internalType\": \"address\",\n            \"name\": \"\",\n            \"type\": \"address\"\n          }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"inputs\": [],\n        \"name\": \"transactionValue\",\n        \"outputs\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      },\n      {\n        \"inputs\": [],\n        \"name\": \"withdrawAllToOwner\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      },\n      {\n        \"inputs\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"_transactionValue\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"address\",\n            \"name\": \"_other\",\n            \"type\": \"address\"\n          }\n        ],\n        \"name\": \"withdrawToOther\",\n        \"outputs\": [],\n        \"stateMutability\": \"payable\",\n        \"type\": \"function\"\n      },\n      {\n        \"inputs\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"_transactionValue\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"name\": \"withdrawToOwner\",\n        \"outputs\": [],\n        \"stateMutability\": \"payable\",\n        \"type\": \"function\"\n      },\n      {\n        \"stateMutability\": \"payable\",\n        \"type\": \"receive\"\n      }\n    ];\n    \n    let contractInst = new this.web3.eth.Contract(abiContract as AbiItem[], contractAddress);\n    let contractBalance = contractInst.methods.getContractBalance().call().then((res: any)=> console.log(res)); \n\n\n\n    let accounts = await this.web3.eth.getAccounts();\n    console.log(accounts);\n   // let balance = await this.web3.eth.getBalance(accounts[0]);\n    //console.log(this.web3.utils.fromWei(await balance, \"ether\"));\n    //const transaction006=this.web3.utils.toWei(\"0.1\",\"ether\");\n    //let txResult=await contractInst.methods.deposit().send({from: accounts[0],value:transaction006});\n    /*let txResult2=await contractInst.methods.\n    withdrawToOther(transaction006, \"0xe1e481Ba1AD79E5d644440847eeabb139eA3Bf06\").\n    send({from: accounts[0]});\n    */\n    //console.log(txResult2);\n    \n  }\n\n}\n","<div class=\"container\">\n  <header class=\"jumbotron\">\n    <form class=\"form-group\"     \n    name=\"depositForm\"\n    #f=\"ngForm\" \n    (ngSubmit)=\"onSubmit()\">\n\n      <label for=\"ethValue\">Value:</label>\n      <input type=\"number\" class=\"ethValue\"           \n      [(ngModel)]=\"depositForm.ethValue\"\n      name=\"ethValue\"\n      >    \n      <button class=\"btn btn-primary btn-block\">Deposit here</button>\n    </form>\n  </header>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}