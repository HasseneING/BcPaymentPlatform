{"ast":null,"code":"\"use strict\";\n\n/**\n * Returns a Promise that resolves to the value of window.ethereum if it is\n * set within the given timeout, or null.\n * The Promise will not reject, but an error will be thrown if invalid options\n * are provided.\n *\n * @param options - Options bag.\n * @param options.mustBeMetaMask - Whether to only look for MetaMask providers.\n * Default: false\n * @param options.silent - Whether to silence console errors. Does not affect\n * thrown errors. Default: false\n * @param options.timeout - Milliseconds to wait for 'ethereum#initialized' to\n * be dispatched. Default: 3000\n * @returns A Promise that resolves with the Provider if it is detected within\n * given timeout, otherwise null.\n */\nfunction detectEthereumProvider({\n  mustBeMetaMask = false,\n  silent = false,\n  timeout = 3000\n} = {}) {\n  _validateInputs();\n  let handled = false;\n  return new Promise(resolve => {\n    if (window.ethereum) {\n      handleEthereum();\n    } else {\n      window.addEventListener('ethereum#initialized', handleEthereum, {\n        once: true\n      });\n      setTimeout(() => {\n        handleEthereum();\n      }, timeout);\n    }\n    function handleEthereum() {\n      if (handled) {\n        return;\n      }\n      handled = true;\n      window.removeEventListener('ethereum#initialized', handleEthereum);\n      const {\n        ethereum\n      } = window;\n      if (ethereum && (!mustBeMetaMask || ethereum.isMetaMask)) {\n        resolve(ethereum);\n      } else {\n        const message = mustBeMetaMask && ethereum ? 'Non-MetaMask window.ethereum detected.' : 'Unable to detect window.ethereum.';\n        !silent && console.error('@metamask/detect-provider:', message);\n        resolve(null);\n      }\n    }\n  });\n  function _validateInputs() {\n    if (typeof mustBeMetaMask !== 'boolean') {\n      throw new Error(`@metamask/detect-provider: Expected option 'mustBeMetaMask' to be a boolean.`);\n    }\n    if (typeof silent !== 'boolean') {\n      throw new Error(`@metamask/detect-provider: Expected option 'silent' to be a boolean.`);\n    }\n    if (typeof timeout !== 'number') {\n      throw new Error(`@metamask/detect-provider: Expected option 'timeout' to be a number.`);\n    }\n  }\n}\nmodule.exports = detectEthereumProvider;","map":{"version":3,"names":["detectEthereumProvider","mustBeMetaMask","silent","timeout","_validateInputs","handled","Promise","resolve","window","ethereum","handleEthereum","addEventListener","once","setTimeout","removeEventListener","isMetaMask","message","console","error","Error","module","exports"],"sources":["F:/DDesktop/MEAN_BC/mean-stack-authentication-authorization-master/angular-15-client/node_modules/@metamask/detect-provider/dist/index.js"],"sourcesContent":["\"use strict\";\n/**\n * Returns a Promise that resolves to the value of window.ethereum if it is\n * set within the given timeout, or null.\n * The Promise will not reject, but an error will be thrown if invalid options\n * are provided.\n *\n * @param options - Options bag.\n * @param options.mustBeMetaMask - Whether to only look for MetaMask providers.\n * Default: false\n * @param options.silent - Whether to silence console errors. Does not affect\n * thrown errors. Default: false\n * @param options.timeout - Milliseconds to wait for 'ethereum#initialized' to\n * be dispatched. Default: 3000\n * @returns A Promise that resolves with the Provider if it is detected within\n * given timeout, otherwise null.\n */\nfunction detectEthereumProvider({ mustBeMetaMask = false, silent = false, timeout = 3000, } = {}) {\n    _validateInputs();\n    let handled = false;\n    return new Promise((resolve) => {\n        if (window.ethereum) {\n            handleEthereum();\n        }\n        else {\n            window.addEventListener('ethereum#initialized', handleEthereum, { once: true });\n            setTimeout(() => {\n                handleEthereum();\n            }, timeout);\n        }\n        function handleEthereum() {\n            if (handled) {\n                return;\n            }\n            handled = true;\n            window.removeEventListener('ethereum#initialized', handleEthereum);\n            const { ethereum } = window;\n            if (ethereum && (!mustBeMetaMask || ethereum.isMetaMask)) {\n                resolve(ethereum);\n            }\n            else {\n                const message = mustBeMetaMask && ethereum\n                    ? 'Non-MetaMask window.ethereum detected.'\n                    : 'Unable to detect window.ethereum.';\n                !silent && console.error('@metamask/detect-provider:', message);\n                resolve(null);\n            }\n        }\n    });\n    function _validateInputs() {\n        if (typeof mustBeMetaMask !== 'boolean') {\n            throw new Error(`@metamask/detect-provider: Expected option 'mustBeMetaMask' to be a boolean.`);\n        }\n        if (typeof silent !== 'boolean') {\n            throw new Error(`@metamask/detect-provider: Expected option 'silent' to be a boolean.`);\n        }\n        if (typeof timeout !== 'number') {\n            throw new Error(`@metamask/detect-provider: Expected option 'timeout' to be a number.`);\n        }\n    }\n}\nmodule.exports = detectEthereumProvider;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,sBAAsB,CAAC;EAAEC,cAAc,GAAG,KAAK;EAAEC,MAAM,GAAG,KAAK;EAAEC,OAAO,GAAG;AAAM,CAAC,GAAG,CAAC,CAAC,EAAE;EAC9FC,eAAe,EAAE;EACjB,IAAIC,OAAO,GAAG,KAAK;EACnB,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;IAC5B,IAAIC,MAAM,CAACC,QAAQ,EAAE;MACjBC,cAAc,EAAE;IACpB,CAAC,MACI;MACDF,MAAM,CAACG,gBAAgB,CAAC,sBAAsB,EAAED,cAAc,EAAE;QAAEE,IAAI,EAAE;MAAK,CAAC,CAAC;MAC/EC,UAAU,CAAC,MAAM;QACbH,cAAc,EAAE;MACpB,CAAC,EAAEP,OAAO,CAAC;IACf;IACA,SAASO,cAAc,GAAG;MACtB,IAAIL,OAAO,EAAE;QACT;MACJ;MACAA,OAAO,GAAG,IAAI;MACdG,MAAM,CAACM,mBAAmB,CAAC,sBAAsB,EAAEJ,cAAc,CAAC;MAClE,MAAM;QAAED;MAAS,CAAC,GAAGD,MAAM;MAC3B,IAAIC,QAAQ,KAAK,CAACR,cAAc,IAAIQ,QAAQ,CAACM,UAAU,CAAC,EAAE;QACtDR,OAAO,CAACE,QAAQ,CAAC;MACrB,CAAC,MACI;QACD,MAAMO,OAAO,GAAGf,cAAc,IAAIQ,QAAQ,GACpC,wCAAwC,GACxC,mCAAmC;QACzC,CAACP,MAAM,IAAIe,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEF,OAAO,CAAC;QAC/DT,OAAO,CAAC,IAAI,CAAC;MACjB;IACJ;EACJ,CAAC,CAAC;EACF,SAASH,eAAe,GAAG;IACvB,IAAI,OAAOH,cAAc,KAAK,SAAS,EAAE;MACrC,MAAM,IAAIkB,KAAK,CAAE,8EAA6E,CAAC;IACnG;IACA,IAAI,OAAOjB,MAAM,KAAK,SAAS,EAAE;MAC7B,MAAM,IAAIiB,KAAK,CAAE,sEAAqE,CAAC;IAC3F;IACA,IAAI,OAAOhB,OAAO,KAAK,QAAQ,EAAE;MAC7B,MAAM,IAAIgB,KAAK,CAAE,sEAAqE,CAAC;IAC3F;EACJ;AACJ;AACAC,MAAM,CAACC,OAAO,GAAGrB,sBAAsB"},"metadata":{},"sourceType":"script","externalDependencies":[]}