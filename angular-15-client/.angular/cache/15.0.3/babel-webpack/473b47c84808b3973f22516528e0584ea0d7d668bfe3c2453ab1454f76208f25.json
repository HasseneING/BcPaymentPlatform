{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport class CloudflareProvider extends UrlJsonRpcProvider {\n  static getApiKey(apiKey) {\n    if (apiKey != null) {\n      logger.throwArgumentError(\"apiKey not supported for cloudflare\", \"apiKey\", apiKey);\n    }\n    return null;\n  }\n  static getUrl(network, apiKey) {\n    let host = null;\n    switch (network.name) {\n      case \"homestead\":\n        host = \"https://cloudflare-eth.com/\";\n        break;\n      default:\n        logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n    }\n    return host;\n  }\n  perform(method, params) {\n    const _super = Object.create(null, {\n      perform: {\n        get: () => super.perform\n      }\n    });\n    return __awaiter(this, void 0, void 0, function* () {\n      // The Cloudflare provider does not support eth_blockNumber,\n      // so we get the latest block and pull it from that\n      if (method === \"getBlockNumber\") {\n        const block = yield _super.perform.call(this, \"getBlock\", {\n          blockTag: \"latest\"\n        });\n        return block.number;\n      }\n      return _super.perform.call(this, method, params);\n    });\n  }\n}","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","UrlJsonRpcProvider","Logger","version","logger","CloudflareProvider","getApiKey","apiKey","throwArgumentError","getUrl","network","host","name","arguments","perform","method","params","_super","Object","create","get","block","call","blockTag","number"],"sources":["F:/DDesktop/MEAN_BC/mean-stack-authentication-authorization-master/angular-15-client/node_modules/@ethersproject/providers/lib.esm/cloudflare-provider.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport class CloudflareProvider extends UrlJsonRpcProvider {\n    static getApiKey(apiKey) {\n        if (apiKey != null) {\n            logger.throwArgumentError(\"apiKey not supported for cloudflare\", \"apiKey\", apiKey);\n        }\n        return null;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://cloudflare-eth.com/\";\n                break;\n            default:\n                logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n        return host;\n    }\n    perform(method, params) {\n        const _super = Object.create(null, {\n            perform: { get: () => super.perform }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            // The Cloudflare provider does not support eth_blockNumber,\n            // so we get the latest block and pull it from that\n            if (method === \"getBlockNumber\") {\n                const block = yield _super.perform.call(this, \"getBlock\", { blockTag: \"latest\" });\n                return block.number;\n            }\n            return _super.perform.call(this, method, params);\n        });\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}