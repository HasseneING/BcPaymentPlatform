{"ast":null,"code":"\"use strict\";\n\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nlet _nextId = 1;\nfunction buildWeb3LegacyFetcher(provider, sendFunc) {\n  const fetcher = \"Web3LegacyFetcher\";\n  return function (method, params) {\n    const request = {\n      method: method,\n      params: params,\n      id: _nextId++,\n      jsonrpc: \"2.0\"\n    };\n    return new Promise((resolve, reject) => {\n      this.emit(\"debug\", {\n        action: \"request\",\n        fetcher,\n        request: deepCopy(request),\n        provider: this\n      });\n      sendFunc(request, (error, response) => {\n        if (error) {\n          this.emit(\"debug\", {\n            action: \"response\",\n            fetcher,\n            error,\n            request,\n            provider: this\n          });\n          return reject(error);\n        }\n        this.emit(\"debug\", {\n          action: \"response\",\n          fetcher,\n          request,\n          response,\n          provider: this\n        });\n        if (response.error) {\n          const error = new Error(response.error.message);\n          error.code = response.error.code;\n          error.data = response.error.data;\n          return reject(error);\n        }\n        resolve(response.result);\n      });\n    });\n  };\n}\nfunction buildEip1193Fetcher(provider) {\n  return function (method, params) {\n    if (params == null) {\n      params = [];\n    }\n    const request = {\n      method,\n      params\n    };\n    this.emit(\"debug\", {\n      action: \"request\",\n      fetcher: \"Eip1193Fetcher\",\n      request: deepCopy(request),\n      provider: this\n    });\n    return provider.request(request).then(response => {\n      this.emit(\"debug\", {\n        action: \"response\",\n        fetcher: \"Eip1193Fetcher\",\n        request,\n        response,\n        provider: this\n      });\n      return response;\n    }, error => {\n      this.emit(\"debug\", {\n        action: \"response\",\n        fetcher: \"Eip1193Fetcher\",\n        request,\n        error,\n        provider: this\n      });\n      throw error;\n    });\n  };\n}\nexport class Web3Provider extends JsonRpcProvider {\n  constructor(provider, network) {\n    if (provider == null) {\n      logger.throwArgumentError(\"missing provider\", \"provider\", provider);\n    }\n    let path = null;\n    let jsonRpcFetchFunc = null;\n    let subprovider = null;\n    if (typeof provider === \"function\") {\n      path = \"unknown:\";\n      jsonRpcFetchFunc = provider;\n    } else {\n      path = provider.host || provider.path || \"\";\n      if (!path && provider.isMetaMask) {\n        path = \"metamask\";\n      }\n      subprovider = provider;\n      if (provider.request) {\n        if (path === \"\") {\n          path = \"eip-1193:\";\n        }\n        jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n      } else if (provider.sendAsync) {\n        jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n      } else if (provider.send) {\n        jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n      } else {\n        logger.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n      }\n      if (!path) {\n        path = \"unknown:\";\n      }\n    }\n    super(path, network);\n    defineReadOnly(this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n    defineReadOnly(this, \"provider\", subprovider);\n  }\n  send(method, params) {\n    return this.jsonRpcFetchFunc(method, params);\n  }\n}","map":{"version":3,"names":["deepCopy","defineReadOnly","Logger","version","logger","JsonRpcProvider","_nextId","buildWeb3LegacyFetcher","provider","sendFunc","fetcher","method","params","request","id","jsonrpc","Promise","resolve","reject","emit","action","error","response","Error","message","code","data","result","buildEip1193Fetcher","then","Web3Provider","constructor","network","throwArgumentError","path","jsonRpcFetchFunc","subprovider","host","isMetaMask","sendAsync","bind","send"],"sources":["F:/DDesktop/MEAN_BC/mean-stack-authentication-authorization-master/angular-15-client/node_modules/@ethersproject/providers/lib.esm/web3-provider.js"],"sourcesContent":["\"use strict\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nlet _nextId = 1;\nfunction buildWeb3LegacyFetcher(provider, sendFunc) {\n    const fetcher = \"Web3LegacyFetcher\";\n    return function (method, params) {\n        const request = {\n            method: method,\n            params: params,\n            id: (_nextId++),\n            jsonrpc: \"2.0\"\n        };\n        return new Promise((resolve, reject) => {\n            this.emit(\"debug\", {\n                action: \"request\",\n                fetcher,\n                request: deepCopy(request),\n                provider: this\n            });\n            sendFunc(request, (error, response) => {\n                if (error) {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        fetcher,\n                        error,\n                        request,\n                        provider: this\n                    });\n                    return reject(error);\n                }\n                this.emit(\"debug\", {\n                    action: \"response\",\n                    fetcher,\n                    request,\n                    response,\n                    provider: this\n                });\n                if (response.error) {\n                    const error = new Error(response.error.message);\n                    error.code = response.error.code;\n                    error.data = response.error.data;\n                    return reject(error);\n                }\n                resolve(response.result);\n            });\n        });\n    };\n}\nfunction buildEip1193Fetcher(provider) {\n    return function (method, params) {\n        if (params == null) {\n            params = [];\n        }\n        const request = { method, params };\n        this.emit(\"debug\", {\n            action: \"request\",\n            fetcher: \"Eip1193Fetcher\",\n            request: deepCopy(request),\n            provider: this\n        });\n        return provider.request(request).then((response) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                response,\n                provider: this\n            });\n            return response;\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                error,\n                provider: this\n            });\n            throw error;\n        });\n    };\n}\nexport class Web3Provider extends JsonRpcProvider {\n    constructor(provider, network) {\n        if (provider == null) {\n            logger.throwArgumentError(\"missing provider\", \"provider\", provider);\n        }\n        let path = null;\n        let jsonRpcFetchFunc = null;\n        let subprovider = null;\n        if (typeof (provider) === \"function\") {\n            path = \"unknown:\";\n            jsonRpcFetchFunc = provider;\n        }\n        else {\n            path = provider.host || provider.path || \"\";\n            if (!path && provider.isMetaMask) {\n                path = \"metamask\";\n            }\n            subprovider = provider;\n            if (provider.request) {\n                if (path === \"\") {\n                    path = \"eip-1193:\";\n                }\n                jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n            }\n            else if (provider.sendAsync) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n            }\n            else if (provider.send) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n            }\n            else {\n                logger.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n            }\n            if (!path) {\n                path = \"unknown:\";\n            }\n        }\n        super(path, network);\n        defineReadOnly(this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n        defineReadOnly(this, \"provider\", subprovider);\n    }\n    send(method, params) {\n        return this.jsonRpcFetchFunc(method, params);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}