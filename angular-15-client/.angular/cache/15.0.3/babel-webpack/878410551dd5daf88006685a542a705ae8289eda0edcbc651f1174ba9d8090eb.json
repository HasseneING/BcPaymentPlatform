{"ast":null,"code":"\"use strict\";\n\n// This gets overridden by rollup\nconst exportWordlist = false;\nimport { id } from \"@ethersproject/hash\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nexport const logger = new Logger(version);\nexport class Wordlist {\n  constructor(locale) {\n    logger.checkAbstract(new.target, Wordlist);\n    defineReadOnly(this, \"locale\", locale);\n  }\n  // Subclasses may override this\n  split(mnemonic) {\n    return mnemonic.toLowerCase().split(/ +/g);\n  }\n  // Subclasses may override this\n  join(words) {\n    return words.join(\" \");\n  }\n  static check(wordlist) {\n    const words = [];\n    for (let i = 0; i < 2048; i++) {\n      const word = wordlist.getWord(i);\n      /* istanbul ignore if */\n      if (i !== wordlist.getWordIndex(word)) {\n        return \"0x\";\n      }\n      words.push(word);\n    }\n    return id(words.join(\"\\n\") + \"\\n\");\n  }\n  static register(lang, name) {\n    if (!name) {\n      name = lang.locale;\n    }\n    /* istanbul ignore if */\n    if (exportWordlist) {\n      try {\n        const anyGlobal = window;\n        if (anyGlobal._ethers && anyGlobal._ethers.wordlists) {\n          if (!anyGlobal._ethers.wordlists[name]) {\n            defineReadOnly(anyGlobal._ethers.wordlists, name, lang);\n          }\n        }\n      } catch (error) {}\n    }\n  }\n}","map":{"version":3,"names":["exportWordlist","id","defineReadOnly","Logger","version","logger","Wordlist","constructor","locale","checkAbstract","new","target","split","mnemonic","toLowerCase","join","words","check","wordlist","i","word","getWord","getWordIndex","push","register","lang","name","anyGlobal","window","_ethers","wordlists","error"],"sources":["F:/DDesktop/MEAN_BC/mean-stack-authentication-authorization-master/angular-15-client/node_modules/@ethersproject/wordlists/lib.esm/wordlist.js"],"sourcesContent":["\"use strict\";\n// This gets overridden by rollup\nconst exportWordlist = false;\nimport { id } from \"@ethersproject/hash\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nexport const logger = new Logger(version);\nexport class Wordlist {\n    constructor(locale) {\n        logger.checkAbstract(new.target, Wordlist);\n        defineReadOnly(this, \"locale\", locale);\n    }\n    // Subclasses may override this\n    split(mnemonic) {\n        return mnemonic.toLowerCase().split(/ +/g);\n    }\n    // Subclasses may override this\n    join(words) {\n        return words.join(\" \");\n    }\n    static check(wordlist) {\n        const words = [];\n        for (let i = 0; i < 2048; i++) {\n            const word = wordlist.getWord(i);\n            /* istanbul ignore if */\n            if (i !== wordlist.getWordIndex(word)) {\n                return \"0x\";\n            }\n            words.push(word);\n        }\n        return id(words.join(\"\\n\") + \"\\n\");\n    }\n    static register(lang, name) {\n        if (!name) {\n            name = lang.locale;\n        }\n        /* istanbul ignore if */\n        if (exportWordlist) {\n            try {\n                const anyGlobal = window;\n                if (anyGlobal._ethers && anyGlobal._ethers.wordlists) {\n                    if (!anyGlobal._ethers.wordlists[name]) {\n                        defineReadOnly(anyGlobal._ethers.wordlists, name, lang);\n                    }\n                }\n            }\n            catch (error) { }\n        }\n    }\n}\n"],"mappings":"AAAA,YAAY;;AACZ;AACA,MAAMA,cAAc,GAAG,KAAK;AAC5B,SAASC,EAAE,QAAQ,qBAAqB;AACxC,SAASC,cAAc,QAAQ,2BAA2B;AAC1D,SAASC,MAAM,QAAQ,uBAAuB;AAC9C,SAASC,OAAO,QAAQ,YAAY;AACpC,OAAO,MAAMC,MAAM,GAAG,IAAIF,MAAM,CAACC,OAAO,CAAC;AACzC,OAAO,MAAME,QAAQ,CAAC;EAClBC,WAAW,CAACC,MAAM,EAAE;IAChBH,MAAM,CAACI,aAAa,CAACC,GAAG,CAACC,MAAM,EAAEL,QAAQ,CAAC;IAC1CJ,cAAc,CAAC,IAAI,EAAE,QAAQ,EAAEM,MAAM,CAAC;EAC1C;EACA;EACAI,KAAK,CAACC,QAAQ,EAAE;IACZ,OAAOA,QAAQ,CAACC,WAAW,EAAE,CAACF,KAAK,CAAC,KAAK,CAAC;EAC9C;EACA;EACAG,IAAI,CAACC,KAAK,EAAE;IACR,OAAOA,KAAK,CAACD,IAAI,CAAC,GAAG,CAAC;EAC1B;EACA,OAAOE,KAAK,CAACC,QAAQ,EAAE;IACnB,MAAMF,KAAK,GAAG,EAAE;IAChB,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,EAAEA,CAAC,EAAE,EAAE;MAC3B,MAAMC,IAAI,GAAGF,QAAQ,CAACG,OAAO,CAACF,CAAC,CAAC;MAChC;MACA,IAAIA,CAAC,KAAKD,QAAQ,CAACI,YAAY,CAACF,IAAI,CAAC,EAAE;QACnC,OAAO,IAAI;MACf;MACAJ,KAAK,CAACO,IAAI,CAACH,IAAI,CAAC;IACpB;IACA,OAAOnB,EAAE,CAACe,KAAK,CAACD,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;EACtC;EACA,OAAOS,QAAQ,CAACC,IAAI,EAAEC,IAAI,EAAE;IACxB,IAAI,CAACA,IAAI,EAAE;MACPA,IAAI,GAAGD,IAAI,CAACjB,MAAM;IACtB;IACA;IACA,IAAIR,cAAc,EAAE;MAChB,IAAI;QACA,MAAM2B,SAAS,GAAGC,MAAM;QACxB,IAAID,SAAS,CAACE,OAAO,IAAIF,SAAS,CAACE,OAAO,CAACC,SAAS,EAAE;UAClD,IAAI,CAACH,SAAS,CAACE,OAAO,CAACC,SAAS,CAACJ,IAAI,CAAC,EAAE;YACpCxB,cAAc,CAACyB,SAAS,CAACE,OAAO,CAACC,SAAS,EAAEJ,IAAI,EAAED,IAAI,CAAC;UAC3D;QACJ;MACJ,CAAC,CACD,OAAOM,KAAK,EAAE,CAAE;IACpB;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}