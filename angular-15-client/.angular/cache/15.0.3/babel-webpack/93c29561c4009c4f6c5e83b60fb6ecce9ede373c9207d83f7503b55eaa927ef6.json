{"ast":null,"code":"\"use strict\";\n\nimport { HashZero } from \"@ethersproject/constants\";\nimport { arrayify, concat, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, toUtf8String } from \"./utf8\";\nexport function formatBytes32String(text) {\n  // Get the bytes\n  const bytes = toUtf8Bytes(text);\n  // Check we have room for null-termination\n  if (bytes.length > 31) {\n    throw new Error(\"bytes32 string must be less than 32 bytes\");\n  }\n  // Zero-pad (implicitly null-terminates)\n  return hexlify(concat([bytes, HashZero]).slice(0, 32));\n}\nexport function parseBytes32String(bytes) {\n  const data = arrayify(bytes);\n  // Must be 32 bytes with a null-termination\n  if (data.length !== 32) {\n    throw new Error(\"invalid bytes32 - not 32 bytes long\");\n  }\n  if (data[31] !== 0) {\n    throw new Error(\"invalid bytes32 string - no null terminator\");\n  }\n  // Find the null termination\n  let length = 31;\n  while (data[length - 1] === 0) {\n    length--;\n  }\n  // Determine the string value\n  return toUtf8String(data.slice(0, length));\n}","map":{"version":3,"names":["HashZero","arrayify","concat","hexlify","toUtf8Bytes","toUtf8String","formatBytes32String","text","bytes","length","Error","slice","parseBytes32String","data"],"sources":["F:/DDesktop/MEAN_BC/mean-stack-authentication-authorization-master/angular-15-client/node_modules/@ethersproject/strings/lib.esm/bytes32.js"],"sourcesContent":["\"use strict\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { arrayify, concat, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, toUtf8String } from \"./utf8\";\nexport function formatBytes32String(text) {\n    // Get the bytes\n    const bytes = toUtf8Bytes(text);\n    // Check we have room for null-termination\n    if (bytes.length > 31) {\n        throw new Error(\"bytes32 string must be less than 32 bytes\");\n    }\n    // Zero-pad (implicitly null-terminates)\n    return hexlify(concat([bytes, HashZero]).slice(0, 32));\n}\nexport function parseBytes32String(bytes) {\n    const data = arrayify(bytes);\n    // Must be 32 bytes with a null-termination\n    if (data.length !== 32) {\n        throw new Error(\"invalid bytes32 - not 32 bytes long\");\n    }\n    if (data[31] !== 0) {\n        throw new Error(\"invalid bytes32 string - no null terminator\");\n    }\n    // Find the null termination\n    let length = 31;\n    while (data[length - 1] === 0) {\n        length--;\n    }\n    // Determine the string value\n    return toUtf8String(data.slice(0, length));\n}\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,QAAQ,QAAQ,0BAA0B;AACnD,SAASC,QAAQ,EAAEC,MAAM,EAAEC,OAAO,QAAQ,sBAAsB;AAChE,SAASC,WAAW,EAAEC,YAAY,QAAQ,QAAQ;AAClD,OAAO,SAASC,mBAAmB,CAACC,IAAI,EAAE;EACtC;EACA,MAAMC,KAAK,GAAGJ,WAAW,CAACG,IAAI,CAAC;EAC/B;EACA,IAAIC,KAAK,CAACC,MAAM,GAAG,EAAE,EAAE;IACnB,MAAM,IAAIC,KAAK,CAAC,2CAA2C,CAAC;EAChE;EACA;EACA,OAAOP,OAAO,CAACD,MAAM,CAAC,CAACM,KAAK,EAAER,QAAQ,CAAC,CAAC,CAACW,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAC1D;AACA,OAAO,SAASC,kBAAkB,CAACJ,KAAK,EAAE;EACtC,MAAMK,IAAI,GAAGZ,QAAQ,CAACO,KAAK,CAAC;EAC5B;EACA,IAAIK,IAAI,CAACJ,MAAM,KAAK,EAAE,EAAE;IACpB,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;EAC1D;EACA,IAAIG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE;IAChB,MAAM,IAAIH,KAAK,CAAC,6CAA6C,CAAC;EAClE;EACA;EACA,IAAID,MAAM,GAAG,EAAE;EACf,OAAOI,IAAI,CAACJ,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE;IAC3BA,MAAM,EAAE;EACZ;EACA;EACA,OAAOJ,YAAY,CAACQ,IAAI,CAACF,KAAK,CAAC,CAAC,EAAEF,MAAM,CAAC,CAAC;AAC9C"},"metadata":{},"sourceType":"module","externalDependencies":[]}