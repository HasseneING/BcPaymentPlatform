{"ast":null,"code":"\"use strict\";\n\nimport { decrypt as decryptCrowdsale } from \"./crowdsale\";\nimport { getJsonWalletAddress, isCrowdsaleWallet, isKeystoreWallet } from \"./inspect\";\nimport { decrypt as decryptKeystore, decryptSync as decryptKeystoreSync, encrypt as encryptKeystore } from \"./keystore\";\nfunction decryptJsonWallet(json, password, progressCallback) {\n  if (isCrowdsaleWallet(json)) {\n    if (progressCallback) {\n      progressCallback(0);\n    }\n    const account = decryptCrowdsale(json, password);\n    if (progressCallback) {\n      progressCallback(1);\n    }\n    return Promise.resolve(account);\n  }\n  if (isKeystoreWallet(json)) {\n    return decryptKeystore(json, password, progressCallback);\n  }\n  return Promise.reject(new Error(\"invalid JSON wallet\"));\n}\nfunction decryptJsonWalletSync(json, password) {\n  if (isCrowdsaleWallet(json)) {\n    return decryptCrowdsale(json, password);\n  }\n  if (isKeystoreWallet(json)) {\n    return decryptKeystoreSync(json, password);\n  }\n  throw new Error(\"invalid JSON wallet\");\n}\nexport { decryptCrowdsale, decryptKeystore, decryptKeystoreSync, encryptKeystore, isCrowdsaleWallet, isKeystoreWallet, getJsonWalletAddress, decryptJsonWallet, decryptJsonWalletSync };","map":{"version":3,"names":["decrypt","decryptCrowdsale","getJsonWalletAddress","isCrowdsaleWallet","isKeystoreWallet","decryptKeystore","decryptSync","decryptKeystoreSync","encrypt","encryptKeystore","decryptJsonWallet","json","password","progressCallback","account","Promise","resolve","reject","Error","decryptJsonWalletSync"],"sources":["F:/DDesktop/MEAN_BC/mean-stack-authentication-authorization-master/angular-15-client/node_modules/@ethersproject/json-wallets/lib.esm/index.js"],"sourcesContent":["\"use strict\";\nimport { decrypt as decryptCrowdsale } from \"./crowdsale\";\nimport { getJsonWalletAddress, isCrowdsaleWallet, isKeystoreWallet } from \"./inspect\";\nimport { decrypt as decryptKeystore, decryptSync as decryptKeystoreSync, encrypt as encryptKeystore } from \"./keystore\";\nfunction decryptJsonWallet(json, password, progressCallback) {\n    if (isCrowdsaleWallet(json)) {\n        if (progressCallback) {\n            progressCallback(0);\n        }\n        const account = decryptCrowdsale(json, password);\n        if (progressCallback) {\n            progressCallback(1);\n        }\n        return Promise.resolve(account);\n    }\n    if (isKeystoreWallet(json)) {\n        return decryptKeystore(json, password, progressCallback);\n    }\n    return Promise.reject(new Error(\"invalid JSON wallet\"));\n}\nfunction decryptJsonWalletSync(json, password) {\n    if (isCrowdsaleWallet(json)) {\n        return decryptCrowdsale(json, password);\n    }\n    if (isKeystoreWallet(json)) {\n        return decryptKeystoreSync(json, password);\n    }\n    throw new Error(\"invalid JSON wallet\");\n}\nexport { decryptCrowdsale, decryptKeystore, decryptKeystoreSync, encryptKeystore, isCrowdsaleWallet, isKeystoreWallet, getJsonWalletAddress, decryptJsonWallet, decryptJsonWalletSync, };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,OAAO,IAAIC,gBAAgB,QAAQ,aAAa;AACzD,SAASC,oBAAoB,EAAEC,iBAAiB,EAAEC,gBAAgB,QAAQ,WAAW;AACrF,SAASJ,OAAO,IAAIK,eAAe,EAAEC,WAAW,IAAIC,mBAAmB,EAAEC,OAAO,IAAIC,eAAe,QAAQ,YAAY;AACvH,SAASC,iBAAiB,CAACC,IAAI,EAAEC,QAAQ,EAAEC,gBAAgB,EAAE;EACzD,IAAIV,iBAAiB,CAACQ,IAAI,CAAC,EAAE;IACzB,IAAIE,gBAAgB,EAAE;MAClBA,gBAAgB,CAAC,CAAC,CAAC;IACvB;IACA,MAAMC,OAAO,GAAGb,gBAAgB,CAACU,IAAI,EAAEC,QAAQ,CAAC;IAChD,IAAIC,gBAAgB,EAAE;MAClBA,gBAAgB,CAAC,CAAC,CAAC;IACvB;IACA,OAAOE,OAAO,CAACC,OAAO,CAACF,OAAO,CAAC;EACnC;EACA,IAAIV,gBAAgB,CAACO,IAAI,CAAC,EAAE;IACxB,OAAON,eAAe,CAACM,IAAI,EAAEC,QAAQ,EAAEC,gBAAgB,CAAC;EAC5D;EACA,OAAOE,OAAO,CAACE,MAAM,CAAC,IAAIC,KAAK,CAAC,qBAAqB,CAAC,CAAC;AAC3D;AACA,SAASC,qBAAqB,CAACR,IAAI,EAAEC,QAAQ,EAAE;EAC3C,IAAIT,iBAAiB,CAACQ,IAAI,CAAC,EAAE;IACzB,OAAOV,gBAAgB,CAACU,IAAI,EAAEC,QAAQ,CAAC;EAC3C;EACA,IAAIR,gBAAgB,CAACO,IAAI,CAAC,EAAE;IACxB,OAAOJ,mBAAmB,CAACI,IAAI,EAAEC,QAAQ,CAAC;EAC9C;EACA,MAAM,IAAIM,KAAK,CAAC,qBAAqB,CAAC;AAC1C;AACA,SAASjB,gBAAgB,EAAEI,eAAe,EAAEE,mBAAmB,EAAEE,eAAe,EAAEN,iBAAiB,EAAEC,gBAAgB,EAAEF,oBAAoB,EAAEQ,iBAAiB,EAAES,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}