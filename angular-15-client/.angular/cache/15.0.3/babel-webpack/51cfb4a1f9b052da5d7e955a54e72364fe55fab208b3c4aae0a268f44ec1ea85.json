{"ast":null,"code":"\"use strict\";\n\nimport { Coder } from \"./abstract-coder\";\nimport { pack, unpack } from \"./array\";\nexport class TupleCoder extends Coder {\n  constructor(coders, localName) {\n    let dynamic = false;\n    const types = [];\n    coders.forEach(coder => {\n      if (coder.dynamic) {\n        dynamic = true;\n      }\n      types.push(coder.type);\n    });\n    const type = \"tuple(\" + types.join(\",\") + \")\";\n    super(\"tuple\", type, localName, dynamic);\n    this.coders = coders;\n  }\n  defaultValue() {\n    const values = [];\n    this.coders.forEach(coder => {\n      values.push(coder.defaultValue());\n    });\n    // We only output named properties for uniquely named coders\n    const uniqueNames = this.coders.reduce((accum, coder) => {\n      const name = coder.localName;\n      if (name) {\n        if (!accum[name]) {\n          accum[name] = 0;\n        }\n        accum[name]++;\n      }\n      return accum;\n    }, {});\n    // Add named values\n    this.coders.forEach((coder, index) => {\n      let name = coder.localName;\n      if (!name || uniqueNames[name] !== 1) {\n        return;\n      }\n      if (name === \"length\") {\n        name = \"_length\";\n      }\n      if (values[name] != null) {\n        return;\n      }\n      values[name] = values[index];\n    });\n    return Object.freeze(values);\n  }\n  encode(writer, value) {\n    return pack(writer, this.coders, value);\n  }\n  decode(reader) {\n    return reader.coerce(this.name, unpack(reader, this.coders));\n  }\n}","map":{"version":3,"names":["Coder","pack","unpack","TupleCoder","constructor","coders","localName","dynamic","types","forEach","coder","push","type","join","defaultValue","values","uniqueNames","reduce","accum","name","index","Object","freeze","encode","writer","value","decode","reader","coerce"],"sources":["F:/DDesktop/MEAN_BC/mean-stack-authentication-authorization-master/angular-15-client/node_modules/@ethersproject/abi/lib.esm/coders/tuple.js"],"sourcesContent":["\"use strict\";\nimport { Coder } from \"./abstract-coder\";\nimport { pack, unpack } from \"./array\";\nexport class TupleCoder extends Coder {\n    constructor(coders, localName) {\n        let dynamic = false;\n        const types = [];\n        coders.forEach((coder) => {\n            if (coder.dynamic) {\n                dynamic = true;\n            }\n            types.push(coder.type);\n        });\n        const type = (\"tuple(\" + types.join(\",\") + \")\");\n        super(\"tuple\", type, localName, dynamic);\n        this.coders = coders;\n    }\n    defaultValue() {\n        const values = [];\n        this.coders.forEach((coder) => {\n            values.push(coder.defaultValue());\n        });\n        // We only output named properties for uniquely named coders\n        const uniqueNames = this.coders.reduce((accum, coder) => {\n            const name = coder.localName;\n            if (name) {\n                if (!accum[name]) {\n                    accum[name] = 0;\n                }\n                accum[name]++;\n            }\n            return accum;\n        }, {});\n        // Add named values\n        this.coders.forEach((coder, index) => {\n            let name = coder.localName;\n            if (!name || uniqueNames[name] !== 1) {\n                return;\n            }\n            if (name === \"length\") {\n                name = \"_length\";\n            }\n            if (values[name] != null) {\n                return;\n            }\n            values[name] = values[index];\n        });\n        return Object.freeze(values);\n    }\n    encode(writer, value) {\n        return pack(writer, this.coders, value);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, unpack(reader, this.coders));\n    }\n}\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,KAAK,QAAQ,kBAAkB;AACxC,SAASC,IAAI,EAAEC,MAAM,QAAQ,SAAS;AACtC,OAAO,MAAMC,UAAU,SAASH,KAAK,CAAC;EAClCI,WAAW,CAACC,MAAM,EAAEC,SAAS,EAAE;IAC3B,IAAIC,OAAO,GAAG,KAAK;IACnB,MAAMC,KAAK,GAAG,EAAE;IAChBH,MAAM,CAACI,OAAO,CAAEC,KAAK,IAAK;MACtB,IAAIA,KAAK,CAACH,OAAO,EAAE;QACfA,OAAO,GAAG,IAAI;MAClB;MACAC,KAAK,CAACG,IAAI,CAACD,KAAK,CAACE,IAAI,CAAC;IAC1B,CAAC,CAAC;IACF,MAAMA,IAAI,GAAI,QAAQ,GAAGJ,KAAK,CAACK,IAAI,CAAC,GAAG,CAAC,GAAG,GAAI;IAC/C,KAAK,CAAC,OAAO,EAAED,IAAI,EAAEN,SAAS,EAAEC,OAAO,CAAC;IACxC,IAAI,CAACF,MAAM,GAAGA,MAAM;EACxB;EACAS,YAAY,GAAG;IACX,MAAMC,MAAM,GAAG,EAAE;IACjB,IAAI,CAACV,MAAM,CAACI,OAAO,CAAEC,KAAK,IAAK;MAC3BK,MAAM,CAACJ,IAAI,CAACD,KAAK,CAACI,YAAY,EAAE,CAAC;IACrC,CAAC,CAAC;IACF;IACA,MAAME,WAAW,GAAG,IAAI,CAACX,MAAM,CAACY,MAAM,CAAC,CAACC,KAAK,EAAER,KAAK,KAAK;MACrD,MAAMS,IAAI,GAAGT,KAAK,CAACJ,SAAS;MAC5B,IAAIa,IAAI,EAAE;QACN,IAAI,CAACD,KAAK,CAACC,IAAI,CAAC,EAAE;UACdD,KAAK,CAACC,IAAI,CAAC,GAAG,CAAC;QACnB;QACAD,KAAK,CAACC,IAAI,CAAC,EAAE;MACjB;MACA,OAAOD,KAAK;IAChB,CAAC,EAAE,CAAC,CAAC,CAAC;IACN;IACA,IAAI,CAACb,MAAM,CAACI,OAAO,CAAC,CAACC,KAAK,EAAEU,KAAK,KAAK;MAClC,IAAID,IAAI,GAAGT,KAAK,CAACJ,SAAS;MAC1B,IAAI,CAACa,IAAI,IAAIH,WAAW,CAACG,IAAI,CAAC,KAAK,CAAC,EAAE;QAClC;MACJ;MACA,IAAIA,IAAI,KAAK,QAAQ,EAAE;QACnBA,IAAI,GAAG,SAAS;MACpB;MACA,IAAIJ,MAAM,CAACI,IAAI,CAAC,IAAI,IAAI,EAAE;QACtB;MACJ;MACAJ,MAAM,CAACI,IAAI,CAAC,GAAGJ,MAAM,CAACK,KAAK,CAAC;IAChC,CAAC,CAAC;IACF,OAAOC,MAAM,CAACC,MAAM,CAACP,MAAM,CAAC;EAChC;EACAQ,MAAM,CAACC,MAAM,EAAEC,KAAK,EAAE;IAClB,OAAOxB,IAAI,CAACuB,MAAM,EAAE,IAAI,CAACnB,MAAM,EAAEoB,KAAK,CAAC;EAC3C;EACAC,MAAM,CAACC,MAAM,EAAE;IACX,OAAOA,MAAM,CAACC,MAAM,CAAC,IAAI,CAACT,IAAI,EAAEjB,MAAM,CAACyB,MAAM,EAAE,IAAI,CAACtB,MAAM,CAAC,CAAC;EAChE;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}