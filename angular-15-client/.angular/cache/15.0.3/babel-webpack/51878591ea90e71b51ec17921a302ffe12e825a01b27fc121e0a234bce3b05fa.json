{"ast":null,"code":"import _asyncToGenerator from \"F:/DDesktop/MEAN_BC/mean-stack-authentication-authorization-master/angular-15-client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport Web3 from 'web3';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/user.service\";\nimport * as i2 from \"@angular/forms\";\n// deteethproviderfix dont care how do it  \nexport class BoardUserComponent {\n  constructor(userService) {\n    var _this = this;\n    this.userService = userService;\n    this.depositForm = {\n      ethValue: null\n    };\n    this.walletConnected = false;\n    this.walletId = '';\n    this.walletBalance = '';\n    this.connectToWallet = () => {\n      this.userService.connectWallet();\n    };\n    this.checkWalletConnected = /*#__PURE__*/_asyncToGenerator(function* () {\n      const accounts = yield _this.userService.checkWalletConnected();\n      if (accounts.length > 0) {\n        _this.walletConnected = true;\n        _this.walletId = accounts[0];\n        console.log(_this.walletId);\n      }\n    });\n    const alchemy_url = \"https://eth-sepolia.g.alchemy.com/v2/YGNAUM7D8wTvwFUIV8iyRv0i8N6BTT86\";\n    this.web3 = new Web3(alchemy_url);\n  }\n  ngOnInit() {\n    this.userService.getUserBoard().subscribe({\n      next: data => {\n        this.content = data;\n      },\n      error: err => {\n        if (err.error) {\n          try {\n            const res = JSON.parse(err.error);\n            this.content = res.message;\n          } catch {\n            this.content = `Error with status: ${err.status} - ${err.statusText}`;\n          }\n        } else {\n          this.content = `Error with status: ${err.status}`;\n        }\n      }\n    });\n  }\n  getContractBalance() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      let contractInst = new _this2.web3.eth.Contract(_this2.userService.abiContract, _this2.userService.contractAddress);\n      let contractBalance = contractInst.methods.getContractBalance().call();\n      return contractBalance;\n    })();\n  }\n  getWalletId() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      let balance2 = yield _this3.web3.eth.getBalance(_this3.walletId).then(res => {\n        _this3.walletBalance = res;\n      });\n    })();\n  }\n  onSubmit() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      _this4.connectToWallet();\n      _this4.checkWalletConnected();\n      // this.getWalletId();\n      let balance;\n      balance = _this4.getContractBalance().then(res => {\n        console.log(_this4.web3.utils.fromWei(res, \"ether\"), \"eth\");\n      });\n      console.log(_this4.depositForm);\n      //console.log(Web3.version);\n      console.log(_this4.walletId);\n      var accounts = yield _this4.web3.eth.getAccounts().then(console.log);\n      let balance2 = yield _this4.web3.eth.getBalance(_this4.walletId).then(res => {\n        _this4.walletBalance = res;\n      });\n      //console.log(this.web3.utils.fromWei(await balance2, \"ether\"));\n      //const transaction006=this.web3.utils.toWei(\"0.1\",\"ether\");\n      //let txResult=await contractInst.methods.deposit().send({from: accounts[0],value:transaction006});\n      /*let txResult2=await contractInst.methods.\r\n      withdrawToOther(transaction006, \"0xe1e481Ba1AD79E5d644440847eeabb139eA3Bf06\").\r\n      send({from: accounts[0]});\r\n      */\n      //console.log(txResult2);\n    })();\n  }\n}\n\nBoardUserComponent.ɵfac = function BoardUserComponent_Factory(t) {\n  return new (t || BoardUserComponent)(i0.ɵɵdirectiveInject(i1.UserService));\n};\nBoardUserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BoardUserComponent,\n  selectors: [[\"app-board-user\"]],\n  decls: 10,\n  vars: 3,\n  consts: [[1, \"container\"], [1, \"jumbotron\"], [\"name\", \"depositForm\", 1, \"form-group\", 3, \"ngSubmit\"], [\"f\", \"ngForm\"], [\"for\", \"ethValue\"], [\"type\", \"number\", \"name\", \"ethValue\", 1, \"ethValue\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\", \"btn-block\"]],\n  template: function BoardUserComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"header\", 1)(2, \"form\", 2, 3);\n      i0.ɵɵlistener(\"ngSubmit\", function BoardUserComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"label\", 4);\n      i0.ɵɵtext(5, \"Value:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function BoardUserComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.depositForm.ethValue = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"button\", 6);\n      i0.ɵɵtext(8, \"Deposit here\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtext(9);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.depositForm.ethValue);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate2(\" \", ctx.walletId, \" \", ctx.walletBalance + \" eth\", \" \");\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";AAGA,OAAOA,IAAI,MAAM,MAAM;;;;AAGvB;AAMA,OAAM,MAAOC,kBAAkB;EAU7BC,YAAoBC,WAAwB;IAAA;IAAxB,gBAAW,GAAXA,WAAW;IAR/B,gBAAW,GAAQ;MACjBC,QAAQ,EAAE;KACX;IAEM,oBAAe,GAAY,KAAK;IAChC,aAAQ,GAAW,EAAE;IACrB,kBAAa,GAAQ,EAAE;IA6B9B,oBAAe,GAAI,MAAK;MACtB,IAAI,CAACD,WAAW,CAACE,aAAa,EAAE;IAClC,CAAC;IACD,yBAAoB,kCAAG,aAAW;MAChC,MAAMC,QAAQ,SAAS,KAAI,CAACH,WAAW,CAACI,oBAAoB,EAAE;MAC9D,IAAGD,QAAQ,CAACE,MAAM,GAAG,CAAC,EAAC;QACrB,KAAI,CAACC,eAAe,GAAG,IAAI;QAC3B,KAAI,CAACC,QAAQ,GAAGJ,QAAQ,CAAC,CAAC,CAAC;QAC3BK,OAAO,CAACC,GAAG,CAAC,KAAI,CAACF,QAAQ,CAAC;;IAE9B,CAAC;IAnCC,MAAMG,WAAW,GAAG,uEAAuE;IAC3F,IAAI,CAACC,IAAI,GAAG,IAAId,IAAI,CAACa,WAAW,CAAC;EAEnC;EAEAE,QAAQ;IACN,IAAI,CAACZ,WAAW,CAACa,YAAY,EAAE,CAACC,SAAS,CAAC;MACxCC,IAAI,EAAEC,IAAI,IAAG;QACX,IAAI,CAACC,OAAO,GAAGD,IAAI;MACrB,CAAC;MACDE,KAAK,EAAEC,GAAG,IAAG;QACX,IAAIA,GAAG,CAACD,KAAK,EAAE;UACb,IAAI;YACF,MAAME,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACH,GAAG,CAACD,KAAK,CAAC;YACjC,IAAI,CAACD,OAAO,GAAGG,GAAG,CAACG,OAAO;WAC3B,CAAC,MAAM;YACN,IAAI,CAACN,OAAO,GAAG,sBAAsBE,GAAG,CAACK,MAAM,MAAML,GAAG,CAACM,UAAU,EAAE;;SAExE,MAAM;UACL,IAAI,CAACR,OAAO,GAAG,sBAAsBE,GAAG,CAACK,MAAM,EAAE;;MAErD;KACD,CAAC;EACJ;EAaKE,kBAAkB;IAAA;IAAA;MAErB,IAAIC,YAAY,GAAG,IAAI,MAAI,CAAChB,IAAI,CAACiB,GAAG,CAACC,QAAQ,CAAC,MAAI,CAAC7B,WAAW,CAAC8B,WAAwB,EAAC,MAAI,CAAC9B,WAAW,CAAC+B,eAAe,CAAC;MACzH,IAAIC,eAAe,GAAGL,YAAY,CAACM,OAAO,CAACP,kBAAkB,EAAE,CAC9DQ,IAAI,EAAE;MACP,OAAOF,eAAe;IAAC;EACzB;EACKG,WAAW;IAAA;IAAA;MACd,IAAIC,QAAQ,SAAS,MAAI,CAACzB,IAAI,CAACiB,GAAG,CAACS,UAAU,CAAC,MAAI,CAAC9B,QAAQ,CAAC,CAAC+B,IAAI,CAAClB,GAAG,IAAE;QAAC,MAAI,CAACmB,aAAa,GAAEnB,GAAG;MAAA,CAAC,CAAC;IAAC;EACpG;EAEMoB,QAAQ;IAAA;IAAA;MACZ,MAAI,CAACC,eAAe,EAAE;MACtB,MAAI,CAACrC,oBAAoB,EAAE;MAC5B;MACC,IAAIsC,OAAO;MACXA,OAAO,GAAG,MAAI,CAAChB,kBAAkB,EAAE,CAACY,IAAI,CAAClB,GAAG,IAAE;QAACZ,OAAO,CAACC,GAAG,CAAC,MAAI,CAACE,IAAI,CAACgC,KAAK,CAACC,OAAO,CAACxB,GAAG,EAAE,OAAO,CAAC,EAAC,KAAK,CAAC;MAAA,CAAC,CAAC;MACzGZ,OAAO,CAACC,GAAG,CAAC,MAAI,CAACoC,WAAW,CAAC;MAC7B;MACArC,OAAO,CAACC,GAAG,CAAC,MAAI,CAACF,QAAQ,CAAC;MAC1B,IAAIJ,QAAQ,SAAS,MAAI,CAACQ,IAAI,CAACiB,GAAG,CAACkB,WAAW,EAAE,CAACR,IAAI,CAAC9B,OAAO,CAACC,GAAG,CAAC;MAClE,IAAI2B,QAAQ,SAAS,MAAI,CAACzB,IAAI,CAACiB,GAAG,CAACS,UAAU,CAAC,MAAI,CAAC9B,QAAQ,CAAC,CAAC+B,IAAI,CAAClB,GAAG,IAAE;QAAC,MAAI,CAACmB,aAAa,GAAEnB,GAAG;MAAA,CAAC,CAAC;MACjG;MACA;MACA;MACA;;;;MAIA;IAAA;EAEF;;;AA/EWtB,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAiD;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZ/BC,8BAAuB;MAKnBA;QAAA,OAAYC,cAAU;MAAA,EAAC;MAErBD,gCAAsB;MAAAA,sBAAM;MAAAA,iBAAQ;MACpCA,gCAGC;MAFDA;QAAA;MAAA,EAAkC;MADlCA,iBAGC;MACDA,iCAA0C;MAAAA,4BAAY;MAAAA,iBAAS;MAEjEA,YAEF;MAAAA,iBAAS;;;MAPLA,eAAkC;MAAlCA,kDAAkC;MAKpCA,eAEF;MAFEA,8EAEF","names":["Web3","BoardUserComponent","constructor","userService","ethValue","connectWallet","accounts","checkWalletConnected","length","walletConnected","walletId","console","log","alchemy_url","web3","ngOnInit","getUserBoard","subscribe","next","data","content","error","err","res","JSON","parse","message","status","statusText","getContractBalance","contractInst","eth","Contract","abiContract","contractAddress","contractBalance","methods","call","getWalletId","balance2","getBalance","then","walletBalance","onSubmit","connectToWallet","balance","utils","fromWei","depositForm","getAccounts","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["F:\\DDesktop\\MEAN_BC\\mean-stack-authentication-authorization-master\\angular-15-client\\src\\app\\board-user\\board-user.component.ts","F:\\DDesktop\\MEAN_BC\\mean-stack-authentication-authorization-master\\angular-15-client\\src\\app\\board-user\\board-user.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../_services/user.service';\n\nimport Web3 from 'web3';\nimport { AbiItem } from 'web3-utils'\n\n// deteethproviderfix dont care how do it  \n@Component({\n  selector: 'app-board-user',\n  templateUrl: './board-user.component.html',\n  styleUrls: ['./board-user.component.css']\n})\nexport class BoardUserComponent implements OnInit {\n  content?: string;\n  depositForm: any = {\n    ethValue: null,\n  };\n  private web3: Web3;\n  public walletConnected: boolean = false;\n  public walletId: string = '';\n  public walletBalance:string='';\n\n  constructor(private userService: UserService,\n  ) { \n    const alchemy_url = \"https://eth-sepolia.g.alchemy.com/v2/YGNAUM7D8wTvwFUIV8iyRv0i8N6BTT86\"\n    this.web3 = new Web3(alchemy_url);\n\n  }\n\n  ngOnInit(): void {\n    this.userService.getUserBoard().subscribe({\n      next: data => {\n        this.content = data;\n      },\n      error: err => {\n        if (err.error) {\n          try {\n            const res = JSON.parse(err.error);\n            this.content = res.message;\n          } catch {\n            this.content = `Error with status: ${err.status} - ${err.statusText}`;\n          }\n        } else {\n          this.content = `Error with status: ${err.status}`;\n        }\n      }\n    });\n  }\n\n  connectToWallet  = () => {\n    this.userService.connectWallet();\n  }\n  checkWalletConnected = async () => {\n    const accounts = await this.userService.checkWalletConnected();\n    if(accounts.length > 0){\n      this.walletConnected = true;\n      this.walletId = accounts[0];\n      console.log(this.walletId);\n    }\n  }\n async getContractBalance(){\n  \n    let contractInst = new this.web3.eth.Contract(this.userService.abiContract as AbiItem[],this.userService.contractAddress);\n    let contractBalance = contractInst.methods.getContractBalance()\n    .call();\n    return contractBalance;\n  }\n async getWalletId(){\n    let balance2 = await this.web3.eth.getBalance(this.walletId).then(res=>{this.walletBalance= res});\n  }\n\n  async onSubmit(): Promise<void> {\n    this.connectToWallet();\n    this.checkWalletConnected();\n   // this.getWalletId();\n    let balance;\n    balance = this.getContractBalance().then(res=>{console.log(this.web3.utils.fromWei(res, \"ether\"),\"eth\")});\n    console.log(this.depositForm);\n    //console.log(Web3.version);\n    console.log(this.walletId);\n    var accounts = await this.web3.eth.getAccounts().then(console.log);\n    let balance2 = await this.web3.eth.getBalance(this.walletId).then(res=>{this.walletBalance= res});\n    //console.log(this.web3.utils.fromWei(await balance2, \"ether\"));\n    //const transaction006=this.web3.utils.toWei(\"0.1\",\"ether\");\n    //let txResult=await contractInst.methods.deposit().send({from: accounts[0],value:transaction006});\n    /*let txResult2=await contractInst.methods.\n    withdrawToOther(transaction006, \"0xe1e481Ba1AD79E5d644440847eeabb139eA3Bf06\").\n    send({from: accounts[0]});\n    */\n    //console.log(txResult2);\n    \n  }\n\n}\n","<div class=\"container\">\n  <header class=\"jumbotron\">\n    <form class=\"form-group\"     \n    name=\"depositForm\"\n    #f=\"ngForm\" \n    (ngSubmit)=\"onSubmit()\">\n\n      <label for=\"ethValue\">Value:</label>\n      <input type=\"number\" class=\"ethValue\"           \n      [(ngModel)]=\"depositForm.ethValue\"\n      name=\"ethValue\"\n      >    \n      <button class=\"btn btn-primary btn-block\">Deposit here</button>\n    </form>\n    {{walletId}}\n    {{walletBalance+\" eth\"}} \n  </header>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}